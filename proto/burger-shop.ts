// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               v3.12.4
// source: proto/burger-shop.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "burger_shop";

export interface BurgerShop {
  id: string;
  name: string;
  location: string;
}

export interface BurgerShops {
  shops: BurgerShop[];
}

export interface PostBurgerDTO {
  burgerName: string;
  quantity: number;
  customerName: string;
}

export interface Empty {
}

export interface Order {
  id: string;
  burgerName: string;
  quantity: number;
  customerName: string;
}

export interface Orders {
  orders: Order[];
}

export const BURGER_SHOP_PACKAGE_NAME = "burger_shop";

export interface BurgerShopServiceClient {
  createBurgerShop(request: BurgerShop): Observable<BurgerShop>;

  postOrder(request: PostBurgerDTO): Observable<BurgerShop>;

  getBurgerShops(request: Empty): Observable<BurgerShops>;

  getOrders(request: Empty): Observable<Orders>;
}

export interface BurgerShopServiceController {
  createBurgerShop(request: BurgerShop): Promise<BurgerShop> | Observable<BurgerShop> | BurgerShop;

  postOrder(request: PostBurgerDTO): Promise<BurgerShop> | Observable<BurgerShop> | BurgerShop;

  getBurgerShops(request: Empty): Promise<BurgerShops> | Observable<BurgerShops> | BurgerShops;

  getOrders(request: Empty): Promise<Orders> | Observable<Orders> | Orders;
}

export function BurgerShopServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["createBurgerShop", "postOrder", "getBurgerShops", "getOrders"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("BurgerShopService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("BurgerShopService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const BURGER_SHOP_SERVICE_NAME = "BurgerShopService";
